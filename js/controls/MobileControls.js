export default class MobileControls {
    constructor(game, hero) {
        this.game = game
        this.hero = hero
        
        // –°—Ç–≤–æ—Ä—é—î–º–æ –≤—ñ—Ä—Ç—É–∞–ª—å–Ω—ñ –∫–Ω–æ–ø–∫–∏
        this.createVirtualButtons()
        
        // –§–ª–∞–≥–∏ –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –Ω–∞—Ç–∏—Å–∫–∞–Ω—å
        this.isLeftDown = false
        this.isRightDown = false
        this.isJumpDown = false
        this.isThrowDown = false
    }

    createVirtualButtons() {
        const buttonStyle = {
            font: '32px Arial',
            fill: '#ffffff',
            backgroundColor: 'rgba(0, 0, 0, 0.5)',
            padding: { x: 20, y: 20 }
        }

        // –°—Ç–≤–æ—Ä—é—î–º–æ –≥—Ä—É–ø—É –¥–ª—è –∫–Ω–æ–ø–æ–∫
        this.buttonGroup = this.game.add.group()

        // –õ—ñ–≤–∞ –∫–Ω–æ–ø–∫–∞
        this.leftButton = this.game.add.text(50, this.game.height - 100, '‚Üê', buttonStyle)
        this.leftButton.inputEnabled = true
        this.leftButton.input.priorityID = 1  // –í–∏—â–∏–π –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç –¥–ª—è –∫–Ω–æ–ø–æ–∫
        this.leftButton.events.onInputDown.add(() => this.onLeftDown())
        this.leftButton.events.onInputUp.add(() => this.onLeftUp())
        this.leftButton.alpha = 0.7
        this.buttonGroup.add(this.leftButton)

        // –ü—Ä–∞–≤–∞ –∫–Ω–æ–ø–∫–∞
        this.rightButton = this.game.add.text(150, this.game.height - 100, '‚Üí', buttonStyle)
        this.rightButton.inputEnabled = true
        this.rightButton.input.priorityID = 1
        this.rightButton.events.onInputDown.add(() => this.onRightDown())
        this.rightButton.events.onInputUp.add(() => this.onRightUp())
        this.rightButton.alpha = 0.7
        this.buttonGroup.add(this.rightButton)

        // –ö–Ω–æ–ø–∫–∞ —Å—Ç—Ä–∏–±–∫–∞
        this.jumpButton = this.game.add.text(this.game.width - 150, this.game.height - 100, '‚Üë', buttonStyle)
        this.jumpButton.inputEnabled = true
        this.jumpButton.input.priorityID = 1
        this.jumpButton.events.onInputDown.add(() => this.onJumpDown())
        this.jumpButton.events.onInputUp.add(() => this.onJumpUp())
        this.jumpButton.alpha = 0.7
        this.buttonGroup.add(this.jumpButton)

        // –ö–Ω–æ–ø–∫–∞ –∫–∏–¥–∞–Ω–Ω—è –±–æ–º–±–∏
        this.throwButton = this.game.add.text(this.game.width - 80, this.game.height - 100, 'üí£', buttonStyle)
        this.throwButton.inputEnabled = true
        this.throwButton.input.priorityID = 1
        this.throwButton.events.onInputDown.add(() => this.onThrowDown())
        this.throwButton.events.onInputUp.add(() => this.onThrowUp())
        this.throwButton.alpha = 0.7
        this.buttonGroup.add(this.throwButton)

        // –§—ñ–∫—Å—É—î–º–æ –∫–Ω–æ–ø–∫–∏ –≤—ñ–¥–Ω–æ—Å–Ω–æ –∫–∞–º–µ—Ä–∏
        this.buttonGroup.fixedToCamera = true
    }

    onLeftDown() {
        this.isLeftDown = true
        if (this.hero) this.hero.move(-1)
    }

    onLeftUp() {
        this.isLeftDown = false
        if (this.hero && !this.isRightDown) this.hero.move(0)
    }

    onRightDown() {
        this.isRightDown = true
        if (this.hero) this.hero.move(1)
    }

    onRightUp() {
        this.isRightDown = false
        if (this.hero && !this.isLeftDown) this.hero.move(0)
    }

    onJumpDown() {
        this.isJumpDown = true
        if (this.hero) this.hero.jump()
    }

    onJumpUp() {
        this.isJumpDown = false
    }

    onThrowDown() {
        this.isThrowDown = true
        if (this.hero && typeof this.hero.throwBombs === 'function') {
            this.hero.throwBombs()
        }
    }

    onThrowUp() {
        this.isThrowDown = false
    }

    update() {
        // –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—É –≥–µ—Ä–æ—è –Ω–∞ –æ—Å–Ω–æ–≤—ñ –Ω–∞—Ç–∏—Å–Ω—É—Ç–∏—Ö –∫–Ω–æ–ø–æ–∫
        if (this.hero) {
            if (this.isLeftDown) this.hero.move(-1)
            else if (this.isRightDown) this.hero.move(1)
        }
    }

    destroy() {
        // –í–∏–¥–∞–ª—è—î–º–æ –≥—Ä—É–ø—É –∑ —É—Å—ñ–º–∞ –∫–Ω–æ–ø–∫–∞–º–∏
        if (this.buttonGroup) {
            this.buttonGroup.destroy()
        }
    }
}
